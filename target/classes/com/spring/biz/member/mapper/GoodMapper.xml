<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.biz.member.mapper.GoodMapper">

	<!-- 마이페이지 좋아요리스트 -->
	<select id="getLikedCafes" parameterType="int" resultType="com.spring.biz.common.dto.CafeDTO">
        SELECT cafe_id, cafe_name, image_url
        FROM cafe
        WHERE cafe_id IN (
            SELECT cafe_id
            FROM member_act
            WHERE member_id = #{member_id}
              AND good = 'Y'
        )
    </select>
    <!-- 마이 리뷰 검색 -->
	<select id="getMyReview" parameterType="int" resultType="com.spring.biz.member.dto.MyReviewDTO">
		select cafe.CAFE_ID,cafe.CAFE_NAME,cafe.IMAGE_URL,member_act.POINT,member_act.REVIEW from member_act inner join cafe on member_act.CAFE_ID=cafe.CAFE_ID where MEMBER_ID=${userid} and REVIEW is not null and REVIEW &lt;&gt; '';
	</select>

    <!-- 마이페이지 좋아요 취소 -->
    <update id="removeLike" parameterType="Map">
    	update member_act set good=null where member_id=#{userid} and cafe_id=#{cafeid};
    </update>
    
    <!-- 마이페이지 좋아요, 리뷰 null인경우 삭제 -->
    <delete id="deleteNull" parameterType="Map">
	    DELETE FROM member_act
		WHERE member_id = #{userid} and cafe_id=#{cafeid}  AND good IS NULL AND review IS NULL;
	</delete>
	

	<!-- 좋아요 여부 검색 -->
	<select id="findGood" parameterType="map" resultType="String">
		select GOOD from member_act where MEMBER_ID=${userid} and CAFE_ID=${cafeid} and GOOD="Y";
	</select>
	
	<!-- 좋아요 추가or수정 판단 -->
	<select id="addUpdateGood" parameterType="map" resultType="String">
		select REVIEW from member_act where MEMBER_ID=${userid} and CAFE_ID=${cafeid};
	</select>
	
	<!-- 좋아요 추가식 -->
	<select id="addGood" parameterType="map">
		insert into member_act(MEMBER_ID,CAFE_ID,GOOD) values(${userid},${cafeid},'Y');
	</select>
	
	<!-- 좋아요 수정식 -->
	<select id="updateGood" parameterType="map">
		update member_act set GOOD='Y' where MEMBER_id=${userid} and CAFE_ID=${cafeid};
	</select>
	
	<!-- 리뷰 여부 검색 -->
	<select id="findReview" parameterType="map" resultType="String">
		select REVIEW from member_act where MEMBER_ID=${userid} and CAFE_ID=${cafeid};
	</select>
	
	<!-- 리뷰 추가or수정 판단 -->
	<select id="addUpdateReview" parameterType="map" resultType="String">
		select GOOD from member_act where MEMBER_ID=${userid} and CAFE_ID=${cafeid};
	</select>
	
	<!-- 리뷰 추가식 -->
	<select id="addReview" parameterType="map">
		insert into member_act(MEMBER_ID,CAFE_ID,POINT,REVIEW,MOOD) values(${userid},${cafeid},${rating},'${review}','${cafe_mood}');
	</select>
	
	<!-- 리뷰 수정식 -->
	<select id="updateReview" parameterType="map">
		update member_act set POINT=${rating},REVIEW='${review}',MOOD='${cafe_mood}' where MEMBER_id=${userid} and CAFE_ID=${cafeid};
	</select>
	
	<!-- 수정식 리뷰삭제 -->
	<select id="updateReviewDelete" parameterType="map">
		update member_act set POINT=null,REVIEW=null,MOOD=null where MEMBER_id=${userid} and CAFE_ID=${cafeid};
	</select>
	
	<!-- 딜리트식 리뷰삭제 -->
	<select id="deleteReviewDelete" parameterType="map">
		delete from member_act where MEMBER_ID=${userid} and CAFE_ID=${cafeid};
	</select>
</mapper>